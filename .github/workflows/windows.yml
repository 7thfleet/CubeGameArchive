name: Windows (MSVC)

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2 # Clone repo

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Cache Cinder
      id: cache-cinder
      uses: actions/cache@v2
      with:
        path: ~/cache/${{ runner.os }}/Cinder
        key: ${{ runner.os }}-cinder-snapshot

    - name: Clone & Build Cinder
      if: steps.cache-cinder.outputs.cache-hit != 'true'
      run: |
        mkdir ~/cache/${{ runner.os }} -ea 0
        cd  ~/cache/${{ runner.os }}
        #Easier than testing if the file exists. Prevents the rm command from erroring
        mkdir Cinder -ea 0
        rm Cinder -Force
        git clone --recursive --depth 1 https://github.com/cinder/Cinder.git
        cd Cinder
        cmake -B build
        msbuild proj/vc2019/cinder.sln

    - name: Debugging
      run: |
        cd ~/cache/${{ runner.os }}/Cinder
        ls
        tree lib

    #- name: Generate build files 
    #  run: cmake -B ${{github.workspace}}/build -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE -DCINDER_PATH=~/cache/${{ runner.os }}/Cinder

    #- name: Build project
    #  # The --config option is only used on multi-config generators
    #  run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build-type }}

    #- name: Run tests
    #  working-directory: ${{ github.workspace }}/build
    #  # Run the tests, selecting the configuration
    #  run: ctest -C ${{ matrix.build-type }} --output-on-failure
