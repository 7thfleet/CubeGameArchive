name: Linux (GCC)

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2 # Clone repo

    - name: Update Archives
      run: sudo apt-get update

    - name: Install Cinder Dependencies
      run: >
        sudo apt-get install -y
        libxcursor-dev
        libxrandr-dev
        libxinerama-dev
        libxi-dev
        libgl1-mesa-dev
        libgles2-mesa-dev
        zlib1g-dev
        libfontconfig1-dev
        libsndfile1
        libsndfile1-dev
        libpulse-dev
        libasound2-dev
        libcurl4-gnutls-dev
        libgstreamer1.0-dev
        libgstreamer-plugins-bad1.0-dev
        libgstreamer-plugins-base1.0-dev
        gstreamer1.0-libav
        gstreamer1.0-alsa
        gstreamer1.0-pulseaudio
        gstreamer1.0-plugins-bad
        libboost-filesystem-dev
        libmpg123-dev

    - name: Cache Cinder
      id: cache-cinder
      uses: actions/cache@v2
      with:
        path: ~/cache/${{ runner.os }}/Cinder
        key: ${{ runner.os }}-cinder-latest-dirty

    - name: Clone & Build Cinder
      if: steps.cache-cinder.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/cache/${{ runner.os }}
        cd  ~/cache/${{ runner.os }}
        git clone --recursive --depth 1 https://github.com/cinder/Cinder.git
        cd Cinder
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo
        cmake --build build
        cmake -B build -DCMAKE_BUILD_TYPE=Debug
        cmake --build build

    - name: Debugging
      run: |
        cd ~/cache/${{ runner.os }}/Cinder
        ls
        tree build/lib
        tree lib

    - name: Generate build files 
      # The -DCMAKE_BUILD_TYPE variable only matters to single-config generators
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCINDER_PATH=~/cache/${{ runner.os }}/Cinder/lib/linux/x86_64/ogl/${{ matrix.build-type }}

    - name: Build project
      run: cmake --build ${{ github.workspace }}/build

    - name: Run tests
      working-directory: ${{ github.workspace }}/build
      # Run the tests
      run: ctest -C --output-on-failure
